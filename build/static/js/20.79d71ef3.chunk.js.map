{"version":3,"sources":["../../src/index.ts"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","getSupportedChains","supportedChainIds","rpc","keys","map","Number","k","undefined","WalletConnectConnector","config","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","emitUpdate","accounts","account","walletConnectProvider","removeListener","emitDeactivate","activate","Promise","resolve","reject","userReject","connector","on","enable","then","error","err","provider","connected","createSession","emit","uri","m","WalletConnectProvider","getProvider","getChainId","getAccount","deactivate","disconnect","close","AbstractConnector","update","ConnectorEvent","Update","emitError","Deactivate","EventEmitter"],"mappings":"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","file":"static/js/20.79d71ef3.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}