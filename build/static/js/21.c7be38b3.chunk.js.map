{"version":3,"sources":["../../src/index.ts"],"names":["WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","handleChainChanged","bind","handleAccountsChanged","activate","provider","request","method","accounts","account","on","window","ethereum","isCoinbaseWallet","walletLink","then","m","CoinbaseWalletSDK","makeWeb3Provider","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","emitUpdate","AbstractConnector","update","emit","ConnectorEvent","Update","emitError","error","Error","Deactivate","EventEmitter"],"mappings":"slBAGA,IAUaA,EAAb,Y,QASE,c,MAAcC,QAAKC,YAASC,eAAYC,aAAUC,sB,OAChD,cAAM,CAAEA,kBAAmBA,KAA3B,MAEKJ,IAAMA,EACX,EAAKC,QAAUA,EACf,EAAKC,WAAaA,EAClB,EAAKC,SAAWA,IAAY,EAE5B,EAAKE,mBAAqB,EAAKA,mBAAmBC,KAAxB,MAC1B,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,M,CAC9B,C,EAnBH,G,EAAA,G,sEAAA,2BAqBeE,SArBf,e,MAyBM,K,oCAWqB,EAAKC,SAASC,QAAQ,CAC3CC,OAAQ,yBADa,eAAjBC,GAGN,IAAMC,EAAUD,EAAS,GAKzB,OAHA,EAAKH,SAASK,GAAG,eAAgB,EAAKT,oBACtC,EAAKI,SAASK,GAAG,kBAAmB,EAAKP,uBAElC,CAAEE,SAAU,EAAKA,SAAUI,QAASA,E,qBArBvCE,OAAOC,WAAiD,IAArCD,OAAOC,SAASC,iBAErC,EAAKR,SAAWM,OAAOC,a,sBACb,EAAKE,W,uBACiB,+EAA+BC,MAAK,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,EAAkBA,CAAlB,KAArC,eAA1BC,GACN,EAAKH,WAAa,IAAIG,EAAJ,GAChBpB,QAAS,EAAKA,QACdE,SAAU,EAAKA,UACX,EAAKD,WAAa,CAAEA,WAAY,EAAKA,YAAe,KAE1D,EAAKO,SAAW,EAAKS,WAAWI,iBAAiB,EAAKtB,IA3C3C,E,qGAUjB,CAAC,MAAD,gCA+CeuB,YA/Cf,eAgDI,uBAAO,KAAKd,SAhDhB,CAAC,MAAD,gCAmDee,WAnDf,eAoDI,uBAAO,KAAKf,SAASgB,QApDzB,CAAC,MAAD,gCAuDeC,WAvDf,e,uBAwD2B,KAAKjB,SAASC,QAAQ,CAC3CC,OAAQ,yBADa,eAAjBC,GAGN,OAAOA,EAAS,E,GA3DpB,CAAC,MAAD,gCA8DSe,sBACL,KAAKlB,SAASmB,eAAe,eAAgB,KAAKvB,oBAClD,KAAKI,SAASmB,eAAe,kBAAmB,KAAKrB,sBACtD,EAjEH,EAmEesB,MAnEf,e,OAoEI,KAAKpB,SAASoB,QAAd,KACKC,iB,iBArET,CAAC,MAAD,gCAwEUzB,4BAAmBoB,GAIzB,KAAKM,WAAW,CAAEN,QAASA,GAC5B,EA7EH,EA+EUlB,+BAAsBK,GAI5B,KAAKmB,WAAW,CAAElB,QAASD,EAAS,IACrC,EApFH,GAAyCoB,I,8FAVnBA,EAAtB,Y,4BAGgB5B,Q,MAAkD,CAAC,EAAD,GAAlDA,kB,6BAEPA,kBAAoBA,E,oHASjB2B,oBAAWE,G,KAIdC,KAAKC,IAAeC,OAAQH,E,IAGzBI,mBAAUC,G,KAIbJ,KAAKC,IAAeI,MAAOD,E,IAGxBR,0B,KAIHI,KAAKC,IAAeK,W,IAhC7B,CAAgDC,e","file":"static/js/21.c7be38b3.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}